{"mappings":"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","sources":["src/JS/dinosaur.js"],"sourcesContent":["const dino = document.querySelector('.dino');\nconst dinoLose = document.querySelector('.dino-lose');\nconst dinoRun1 = document.querySelector('.dino-run1');\nconst dinoRun2 = document.querySelector('.dino-run2');\nconst cactus = document.querySelector('.dino-game__cactus');\nconst ground1 = document.querySelector('#ground1');\nconst ground2 = document.querySelector('#ground2');\nconst dinoGameOver = document.querySelector('.dino-game__over');\nconst dinoRestart = document.querySelector('.dino-game__restart');\nconst scorePoints = document.querySelector('.dino-game__points');\nconst scoreHigh = document.querySelector('.dino-game__hi');\n\nlet isJumping = false;\nlet hasJumped = false;\nlet game;\nlet ground;\nlet run;\nlet points = 0;\nlet highScore = localStorage.getItem('highScore') || 0;\n\n// це для того щоб в нас динозаврик не пригав коли гра закінчилась\nlet isGameOver = false;\n\nfunction updateScoreDisplay() {\n    scorePoints.textContent = points.toString().padStart(5, '0');\n    scoreHigh.textContent = 'HI ' + highScore.toString().padStart(5, '0');\n}\n\nfunction jump() {\n    if (isJumping || isGameOver) return;\n\n    isJumping = true;\n    dino.style.display = 'block';\n    dinoRun1.style.display = 'none';\n    dinoRun2.style.display = 'none';\n    dino.classList.add('jump');\n\n    setTimeout(() => {\n        dino.classList.remove('jump');\n        isJumping = false;\n    }, 700);\n\n    if (!hasJumped) {\n        hasJumped = true;\n        setTimeout(() => {\n            cactus.classList.add('move');\n            startGroundLoop();\n            startGame();\n            startRunningAnimation();\n        }, 200);\n    }\n}\n\nfunction startGroundLoop() {\n    let ground1Left = 0;\n    let ground2Left = 100;\n\n    ground = setInterval(() => {\n        ground1Left -= 1;\n        ground2Left -= 1;\n\n        if (ground1Left <= -100) {\n            ground1Left = 100;\n        }\n\n        if (ground2Left <= -100) {\n            ground2Left = 100;\n        }\n\n        ground1.style.left = ground1Left + '%';\n        ground2.style.left = ground2Left + '%';\n    }, 20);\n}\n\nfunction startGame() {\n    game = setInterval(() => {\n        const dinoRect = dino.getBoundingClientRect();\n        const dinoRun1Rect = dinoRun1.getBoundingClientRect();\n        const dinoRun2Rect = dinoRun2.getBoundingClientRect();\n        const cactusRect = cactus.getBoundingClientRect();\n\n        console.log('Dino:', dinoRect);\n        console.log('Cactus:', cactusRect);\n\n        if (isCollision(dinoRect, cactusRect) ||\n            isCollision(dinoRun1Rect, cactusRect) ||\n            isCollision(dinoRun2Rect, cactusRect)) {\n            console.log('Collision detected!');\n            gameOver();\n        } else {\n            points++;\n            updateScoreDisplay();\n        }\n    }, 50);\n}\n\nfunction startRunningAnimation() {\n    let toggle = true;\n    run = setInterval(() => {\n        if (!isJumping) {\n            dino.style.display = 'none';\n            dinoRun1.style.display = toggle ? 'block' : 'none';\n            dinoRun2.style.display = toggle ? 'none' : 'block';\n            toggle = !toggle;\n        }\n    }, 120);\n}\n\nfunction isCollision(dinoRect, cactusRect) {\n    const dinoHitbox = {\n        left: dinoRect.left + 5,\n        right: dinoRect.right - 5,\n        top: dinoRect.top + 5,\n        bottom: dinoRect.bottom - 5\n    };\n    const cactusHitbox = {\n        left: cactusRect.left + 5,\n        right: cactusRect.right - 5,\n        top: cactusRect.top + 5,\n        bottom: cactusRect.bottom - 5\n    };\n\n    return !(dinoHitbox.right < cactusHitbox.left ||\n        dinoHitbox.left > cactusHitbox.right ||\n        dinoHitbox.bottom < cactusHitbox.top ||\n        dinoHitbox.top > cactusHitbox.bottom);\n}\nfunction gameOver() {\n    isGameOver = true;\n    clearInterval(game);\n    clearInterval(ground);\n    clearInterval(run);\n\n    cactus.classList.remove('move');\n    // cactus.style.left = \"617px\";\n    ground1.style.left = '0%';\n    ground2.style.left = '100%';\n    dinoGameOver.style.display = 'block';\n    dinoRestart.style.display = 'block';\n    dino.classList.remove('jump');\n    dino.style.display = 'none';\n    dinoLose.style.display = 'flex';\n\n\n    if (points > highScore) {\n        highScore = points;\n        localStorage.setItem('highScore', highScore);\n    }\n}\n\nfunction resetGame() {\n    isGameOver = false;\n    points = 0;\n    updateScoreDisplay();\n    dinoGameOver.style.display = 'none';\n    dinoRestart.style.display = 'none';\n    hasJumped = false;\n    cactus.classList.remove('move');\n    cactus.style.left = '100%';\n    dino.style.display = 'flex';\n    dinoLose.style.display = 'none';\n    jump();\n}\n\ndocument.addEventListener('keydown', (event) => {\n    if (event.code === 'Space' && !isGameOver) {\n        jump();\n    }\n});\n\ndocument.querySelector('.dino-game').addEventListener('click', (event) => {\n    if (!isGameOver) {\n        jump();\n    }\n});\ndinoRestart.addEventListener('click', resetGame);\nupdateScoreDisplay();\ndocument.addEventListener('keydown', function(event) {\n    if (event.code === 'Space') {\n        event.preventDefault(); // Забороняє стандартну поведінку (прокручування)\n    }\n});"],"names":["game","ground","run","dino","document","querySelector","dinoLose","dinoRun1","dinoRun2","cactus","ground1","ground2","dinoGameOver","dinoRestart","scorePoints","scoreHigh","isJumping","hasJumped","points","highScore","localStorage","getItem","isGameOver","updateScoreDisplay","textContent","toString","padStart","jump","style","display","classList","add","setTimeout","remove","startGroundLoop","startGame","startRunningAnimation","ground1Left","ground2Left","setInterval","left","dinoRect","getBoundingClientRect","dinoRun1Rect","dinoRun2Rect","cactusRect","console","log","isCollision","gameOver","toggle","dinoHitbox","right","top","bottom","cactusHitbox","clearInterval","setItem","resetGame","addEventListener","event","code","preventDefault"],"version":3,"file":"index.9d39fac3.js.map"}