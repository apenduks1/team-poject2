var scientists=[{name:"Albert",surname:"Einstein",born:1879,dead:1955,id:1},{name:"Isaac",surname:"Newton",born:1643,dead:1727,id:2},{name:"Galileo",surname:"Galilei",born:1564,dead:1642,id:3},{name:"Marie",surname:"Curie",born:1867,dead:1934,id:4},{name:"Johannes",surname:"Kepler",born:1571,dead:1630,id:5},{name:"Nicolaus",surname:"Copernicus",born:1473,dead:1543,id:6},{name:"Max",surname:"Planck",born:1858,dead:1947,id:7},{name:"Katherine",surname:"Blodgett",born:1898,dead:1979,id:8},{name:"Ada",surname:"Lovelace",born:1815,dead:1852,id:9},{name:"Sarah E.",surname:"Goode",born:1855,dead:1905,id:10},{name:"Lise",surname:"Meitner",born:1878,dead:1968,id:11},{name:"Hanna",surname:"HammarstrÃ¶m",born:1829,dead:1909,id:12}],allBtns=document.querySelectorAll(".fact__list-btn");allBtns.forEach((function(n){n.addEventListener("click",(function(){switch(console.log(n.getAttribute("data-value")),n.getAttribute("data-value")){case"19th-century":century();break;case"einstein":albertEinstein();break;case"ABC":ABC();break;case"firstName-c":firstNameC();break;case"delete-a":deleteA();break;case"yearsSort":yearsSort();break;case"earlyYears":earlyYears();break;case"longestAndSmallestYears":longestAndSmallestYears();break;case"surnamesMatch":surnamesMatch()}}))}));var nameParagraphs=document.querySelectorAll(".name"),surname=document.querySelectorAll(".surname"),birthYear=document.querySelectorAll(".birthYear"),deathYear=document.querySelectorAll(".deathYear"),century=function(){var n=scientists.filter((function(n){return n.born>=1801&&n.born<=1900})),t=n.map((function(n){return n.name})),e=n.map((function(n){return n.surname})),r=n.map((function(n){return n.born})),a=n.map((function(n){return n.dead}));nameParagraphs.forEach((function(n,e){n.textContent=t[e]})),surname.forEach((function(n,t){n.textContent=e[t]})),birthYear.forEach((function(n,t){n.textContent=r[t]})),deathYear.forEach((function(n,t){n.textContent=a[t]}))},albertEinstein=function(){var n=scientists.filter((function(n){return"Einstein"===n.surname})),t=n.map((function(n){return n.name})),e=n.map((function(n){return n.surname})),r=n.map((function(n){return n.born})),a=n.map((function(n){return n.dead}));nameParagraphs.forEach((function(n,e){n.textContent=t[e]})),surname.forEach((function(n,t){n.textContent=e[t]})),birthYear.forEach((function(n,t){n.textContent=r[t]})),deathYear.forEach((function(n,t){n.textContent=a[t]}))},ABC=function(){var n=scientists.slice();n.sort((function(n,t){return n.surname.localeCompare(t.surname)}));var t=n.map((function(n){return n.name})),e=n.map((function(n){return n.surname})),r=n.map((function(n){return n.born})),a=n.map((function(n){return n.dead}));nameParagraphs.forEach((function(n,e){n.textContent=t[e]})),surname.forEach((function(n,t){n.textContent=e[t]})),birthYear.forEach((function(n,t){n.textContent=r[t]})),deathYear.forEach((function(n,t){n.textContent=a[t]}))},firstNameC=function(){var n=scientists.filter((function(n){return"C"===n.surname[0]})),t=n.map((function(n){return n.name})),e=n.map((function(n){return n.surname})),r=n.map((function(n){return n.born})),a=n.map((function(n){return n.dead}));nameParagraphs.forEach((function(n,e){n.textContent=t[e]})),surname.forEach((function(n,t){n.textContent=e[t]})),birthYear.forEach((function(n,t){n.textContent=r[t]})),deathYear.forEach((function(n,t){n.textContent=a[t]}))},deleteA=function(){var n=scientists.filter((function(n){return"A"!==n.name[0]})),t=n.map((function(n){return n.name})),e=n.map((function(n){return n.surname})),r=n.map((function(n){return n.born})),a=n.map((function(n){return n.dead}));nameParagraphs.forEach((function(n,e){n.textContent=t[e]})),surname.forEach((function(n,t){n.textContent=e[t]})),birthYear.forEach((function(n,t){n.textContent=r[t]})),deathYear.forEach((function(n,t){n.textContent=a[t]}))},surnamesMatch=function(){var n=scientists.filter((function(n){return n.name[0]===n.surname[0]})),t=n.map((function(n){return n.name})),e=n.map((function(n){return n.surname})),r=n.map((function(n){return n.born})),a=n.map((function(n){return n.dead}));nameParagraphs.forEach((function(n,e){n.textContent=t[e]})),surname.forEach((function(n,t){n.textContent=e[t]})),birthYear.forEach((function(n,t){n.textContent=r[t]})),deathYear.forEach((function(n,t){n.textContent=a[t]}))},yearsSort=function(){var n=scientists.sort((function(n,t){return n.born-t.born})),t=n.map((function(n){return n.name})),e=n.map((function(n){return n.surname})),r=n.map((function(n){return n.born})),a=n.map((function(n){return n.dead}));nameParagraphs.forEach((function(n,e){n.textContent=t[e]})),surname.forEach((function(n,t){n.textContent=e[t]})),birthYear.forEach((function(n,t){n.textContent=r[t]})),deathYear.forEach((function(n,t){n.textContent=a[t]}))},earlyYears=function(){nameParagraphs.forEach((function(n){n.textContent=""})),surname.forEach((function(n){n.textContent=""})),birthYear.forEach((function(n){n.textContent=""})),deathYear.forEach((function(n){n.textContent=""}));var n=scientists.sort((function(n,t){return t.born-n.born}))[0];n&&(nameParagraphs[0].textContent=n.name,surname[0].textContent=n.surname,birthYear[0].textContent=n.born,deathYear[0].textContent=n.dead)},longestAndSmallestYears=function(){var n=scientists.sort((function(n,t){return n.born-t.born}))[0];n&&(nameParagraphs[0].textContent=n.name,surname[0].textContent=n.surname,birthYear[0].textContent=n.born,deathYear[0].textContent=n.dead);var t=scientists.sort((function(n,t){return t.born-n.born}))[0];t&&(nameParagraphs[1].textContent=t.name,surname[1].textContent=t.surname,birthYear[1].textContent=t.born,deathYear[1].textContent=t.dead)};
//# sourceMappingURL=index.77860ad4.js.map
